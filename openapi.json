{
    "openapi": "3.0.0",
    "info": {
        "title": "Green Universe Coin.",
        "description": "This is a server for the Green Universe Coin.",
        "contact": {
            "name": "API Support",
            "url": "https://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "{basePath}",
            "description": "Development Server",
            "variables": {
                "basePath": {
                    "default": "/v1",
                    "enum": [
                        "/v1"
                    ]
                }
            }
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": "User operations."
        },
        {
            "name": "Category",
            "description": "Category Operations."
        },
        {
            "name": "Project",
            "description": "Project Operations."
        },
        {
            "name": "Donation",
            "description": "Donation Operations."
        },
        {
            "name": "Airport",
            "description": "Airport Operations."
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Security Schemas"
            }
        },
        "responses": {
            "200": {
                "description": "Request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 200
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "message": {
                                    "type": "string",
                                    "default": "The resource has been fetched and is transmitted in the data body."
                                },
                                "data": {
                                    "type": "object",
                                    "default": {}
                                }
                            }
                        }
                    }
                }
            },
            "201": {
                "description": "New resource created.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 201
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "message": {
                                    "type": "string",
                                    "default": "New resource created."
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "description": "Bad Request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 400
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Bad Request"
                                }
                            }
                        }
                    }
                }
            },
            "404": {
                "description": "Resource Not Found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 404
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Can not map the specified URl to a resource!"
                                }
                            }
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 500
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Server encountered an unexpected condition that prevented it from fulfilling the request!"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/user/login": {
            "post": {
                "summary": "Logs user into the system.",
                "description": "",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "description": "Request body for user login.",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "wallet_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0x3721430091076C0be6e96CE17E7DC22A2e173b57",
                                        "nullable": false
                                    },
                                    "emailAddress": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "abc@gmail.com",
                                        "nullable": false
                                    },
                                    "promotionalEmails": {
                                        "type": "boolean",
                                        "format": "",
                                        "example": "true",
                                        "nullable": false
                                    }
                                },
                                "required": [
                                    "wallet_address"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request Successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "default": 200
                                        },
                                        "status": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Login completed successfully!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "nullable": false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/user/details/{uuid}": {
            "get": {
                "summary": "Get user by UUID.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "name": "uuid",
                        "schema": {
                            "type": "string",
                            "example": "97e3cb16-af8a-4366-ad1b-238351098efc"
                        },
                        "description": "user's uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/user/details": {
            "get": {
                "summary": "Get all users in the system.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/user/userExistence/{wallet_address}": {
            "get": {
                "summary": "Check if a wallet address exists.",
                "description": "This is an existence check for a specific wallet address.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "name": "wallet_address",
                        "schema": {
                            "type": "string",
                            "example": "0x91ca770c261772DDAaFc2FA477527C5191f5Be53"
                        },
                        "description": "user's wallet address"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Logs out current logged in user session.",
                "description": "This can only be done by the logged in user.",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "summary": "Get all categories in the DB.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "post": {
                "summary": "Adds a new category into the DB.",
                "description": "",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for adding a new category.",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "categoryTitle": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "sports",
                                        "nullable": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/categories/userCategories/{userId}": {
            "get": {
                "summary": "Get all categories in the DB for a specific user.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "Category"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "name": "userId",
                        "schema": {
                            "type": "string",
                            "example": "0e7f0929-d364-44c7-bf38-953f755c266e"
                        },
                        "description": "user's uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "summary": "Get all projects in the DB.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectId",
                        "schema": {
                            "type": "string",
                            "example": "1",
                            "nullable": false
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "example": "sports",
                            "nullable": false
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "abc",
                            "nullable": false
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "post": {
                "summary": "Adds a new project into the DB.",
                "description": "",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "moduleName",
                        "schema": {
                            "type": "string",
                            "example": "projects",
                            "nullable": false
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for adding a new project.",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "projectTitle": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "abc",
                                        "nullable": false
                                    },
                                    "projectBrief": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "def",
                                        "nullable": false
                                    },
                                    "projectContent": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "cvb",
                                        "nullable": false
                                    },
                                    "expectedDonationAmount": {
                                        "type": "integer",
                                        "format": "string",
                                        "example": 123456,
                                        "nullable": false
                                    },
                                    "publishedBy": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Raj",
                                        "nullable": false
                                    },
                                    "publishedDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-05:12:39:35",
                                        "nullable": false
                                    },
                                    "category": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "sports",
                                        "nullable": false
                                    },
                                    "media": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": false
                                    },
                                    "thumbnail": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": false
                                    },
                                    "externalLinkLinkedIn": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "https://linkedin.com/",
                                        "nullable": false
                                    },
                                    "externalLinkTwitter": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "https://twitter.com/",
                                        "nullable": false
                                    }
                                },
                                "required": [
                                    "projectTitle",
                                    "projectBrief",
                                    "projectContent",
                                    "expectedDonationAmount",
                                    "publishedBy",
                                    "publishedDate",
                                    "category",
                                    "media",
                                    "thumbnail"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/donations": {
            "get": {
                "summary": "Get all donations of a user from the DB.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "Donation"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "schema": {
                            "type": "string",
                            "example": "5368a2d2-925f-47b8-963c-71a95842c79a",
                            "nullable": false
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "example": "sports",
                            "nullable": false
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "abc",
                            "nullable": false
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "post": {
                "summary": "Adds a new donation into the DB.",
                "description": "",
                "tags": [
                    "Donation"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for adding a new donation.",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "5368a2d2-925f-47b8-963c-71a95842c79a",
                                        "nullable": false
                                    },
                                    "projectId": {
                                        "type": "integer",
                                        "format": "string",
                                        "example": 1,
                                        "nullable": false
                                    },
                                    "donationTxHash": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0x25d8d9b4f60a20faf9abaadf2feb3fe8cf5def0a85c54745b664b73af2ccbb15",
                                        "nullable": false
                                    },
                                    "donationAmount": {
                                        "type": "integer",
                                        "format": "string",
                                        "example": 123456,
                                        "nullable": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/donations/certificate/{donationId}": {
            "get": {
                "summary": "Fetches a certificate based on the donationId passed.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "Donation"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "name": "donationId",
                        "schema": {
                            "type": "string",
                            "example": "lhjkijb75ukut4o782b"
                        },
                        "description": "Donation Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The certificate in the PDF format",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/donations/name/{donationId}": {
            "get": {
                "summary": "Checks if a particular donation has the name set.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "Donation"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "name": "donationId",
                        "schema": {
                            "type": "string",
                            "example": "1"
                        },
                        "description": "Donation Id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/donations/addName": {
            "post": {
                "summary": "Adds a certificate name for a particular donation in the table.",
                "description": "",
                "tags": [
                    "Donation"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for adding a name for the donation certificate.",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "donationId": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "4",
                                        "nullable": false
                                    },
                                    "donationName": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Raj Kumar",
                                        "nullable": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/airports": {
            "get": {
                "summary": "Get airports from the table based on the search query parameter.",
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "Airport"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "abc",
                            "nullable": false
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        }
    }
}